services:
  controller:
    build: ./controller
    container_name: grs-controller
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      onion_net:
        ipv4_address: 10.0.2.254
    volumes:
      - ./controller:/controller
    
  prometheus:
    image: prom/prometheus
    privileged: true
    user: root
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9090:9090"
    networks:
      onion_net:
        ipv4_address: 10.0.2.253
  
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      onion_net:
        ipv4_address: 10.0.2.252
  
  postgres:
    image: postgres:17
    container_name: grs-postgres
    ports:
      - "5432:5432"
    env_file:
      - database/.env
    volumes:
      - grs_postgres_data:/var/lib/postgresql/data
      - ./database:/docker-entrypoint-initdb.d
    networks:
      onion_net:

  pgadmin:
    build: ./pgadmin
    container_name: grs-pgadmin
    env_file:
      - pgadmin/.env
    depends_on:
      - postgres
    ports:
      - "8080:80"
    networks:
      onion_net:

  # Connection between the client and onion networks
  client:
    build: ./client
    depends_on:
      - controller
    networks:
      client_net:
        ipv4_address: 10.0.1.254
      onion_net:
    volumes:
      - ./client:/client

  clients:
    build: ./client
    depends_on:
      - client
    deploy:
      replicas: 2
    networks:
      client_net:
      onion_net:
    volumes:
      - ./client:/client
  
  onions:
    build: ./onion
    privileged: true
    depends_on:
      - postgres
      - controller
    environment:
      - HOST=0.0.0.0
      - PORT=9000
      - CONTROLLER_URL=http://grs-controller:8000
    deploy:
      replicas: 3
    networks:
      - onion_net
    volumes:
      - ./onion/onion.py:/onion/onion.py

networks:
  client_net:
    ipam:
      config:
        - subnet: 10.0.1.0/24

  onion_net:
    ipam:
      config:
        - subnet: 10.0.2.0/24

volumes:
  grafana-data:
    driver: local

  grs_postgres_data:
    name: grs_postgres_data
    driver: local
